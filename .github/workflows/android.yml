name: Android CI (Java 11)

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_HOME:     /usr/local/lib/android/sdk
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

    steps:
      - uses: actions/checkout@v4

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x gradlew

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'
          cache: gradle

      - name: Install Android CLI tools
        run: |
          SDK="$ANDROID_SDK_ROOT"
          mkdir -p "$SDK/cmdline-tools/legacy"
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-6609375_latest.zip \
            -o /tmp/cmdline-tools.zip
          unzip -q /tmp/cmdline-tools.zip -d "$SDK/cmdline-tools/legacy"
          rm /tmp/cmdline-tools.zip

      - name: Add CLI tools & platform-tools to PATH
        run: |
          echo "$ANDROID_SDK_ROOT/cmdline-tools/legacy/tools/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools"                    >> $GITHUB_PATH

      - name: Install Android SDK components
        run: |
          sdkmanager --sdk_root="$ANDROID_SDK_ROOT" \
            --install "platforms;android-29" "build-tools;29.0.3"

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses

      - name: Build with Gradle
        run: ./gradlew clean assembleRelease -x lintVitalRelease --stacktrace

      - name: Generate debug keystore
        run: |
          mkdir -p $HOME/.android
          keytool -genkeypair \
            -alias androiddebugkey \
            -storepass android -keypass android \
            -dname "CN=Android Debug,O=Android,C=US" \
            -keystore $HOME/.android/debug.keystore \
            -validity 10000

      - name: Sign the release APK
        run: |
          APK=$(ls app/build/outputs/apk/release/*release*.apk | head -n1)
          echo "Signing APK at: $APK"
          $ANDROID_SDK_ROOT/build-tools/29.0.3/apksigner sign \
            --ks $HOME/.android/debug.keystore \
            --ks-key-alias androiddebugkey \
            --ks-pass pass:android \
            --key-pass pass:android \
            "$APK"

      - name: Package release APK
        run: |
          APK=$(ls app/build/outputs/apk/release/*release*.apk | head -n1)
          mkdir -p release
          cp "$APK" release/app-release.apk

      # ── Publish to GitHub Releases without deprecated set-output ──
      - name: Publish to GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: ncipollo/release-action@v1
        with:
          tag: build-${{ github.run_number }}
          commit: ${{ github.sha }}
          name: Build ${{ github.run_number }}
          body: |
            Automated release of commit ${{ github.sha }} on master
          artifacts: release/app-release.apk
          artifactContentType: application/vnd.android.package-archive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload runner artifact (APK)
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: release/app-release.apk
          retention-days: 7
